@{
    ViewBag.Title = "SignalR Sample";
}
<h2>SignalR Sample</h2>
<div id="googleMap"></div>
<div class="container">
    <input type="hidden" id="displayname" />
    <ul id="content"></ul>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.testHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (message) {
                // Add the message to the page.
                $('#content').html(message);

                var model = JSON.parse(message);
                for (var key in model) {
                    var obj = model[key];
                    // Look no need to do list[i] in the body of the loop
                    //if (undefined != obj)
                    //console.log($('#displayname'), "latitude " + obj["Latitude"] + " longtitude " + obj["Longtitude"]);
                    console.log(map);
                    console.log(obj);
                    console.log(key);

                    var marker = new google.maps.Marker({
                        id: key,
                        position: new google.maps.LatLng(obj["Latitude"], obj["Longtitude"]),
                        animation: google.maps.Animation.BOUNCE
                    });

                    marker.setMap(window.map);
                }

                //For concrete value
                //$('#discussion').html(JSON.parse(message)[$("#displayname").val()].Latitude);
            };

            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            // Start the connection.

            var latitude = 0;
            var longtitude = 0;

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                console.log("Browser does not support geolocation, or it is not permited.")
            }

            function showPosition(position) {
                latitude = position.coords.latitude;
                longtitude = position.coords.longitude;
            }


            function sendDataToServer() {
                // Call the Send method on the hub.
                chat.server.send($('#displayname').val(), latitude, longtitude);
            }

            $.connection.hub.start().done(setInterval(sendDataToServer, 1000));


            //var script = document.createElement("script");
            //script.src = "http://maps.googleapis.com/maps/api/js?key=AIzaSyDzPfjG3MX3RdE1ePdO73UMQUImPsjgZMU&sensor=true&callback=initialize"; document.body.appendChild(script);
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
@section mapInitializationSrcipts{
    <style>
        .scrollFix {
            line-height: 1.35;
            overflow: hidden;
            white-space: nowrap;
        }

        #googleMap {
            width: 640px;
            height: 480px;
        }
    </style>
    <script>
        function initialize() {

            var pos = new google.maps.LatLng(50, 20);


            var mapProp = {
                center: pos,
                zoom: 5,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            window.map = new google.maps.Map(document.getElementById("googleMap")
              , mapProp);

            map.setCenter(pos);

            var marker = new google.maps.Marker({
                position: pos,
                animation: google.maps.Animation.BOUNCE
            });

            marker.setMap(map);

            var infowindow = new google.maps.InfoWindow({
                content: '<div class="scrollFix">' + $('#displayname').val() + '</div>',

            });

            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

            console.log("Map was initialized");
        }
    </script>
}
@section googleMapSourceScript {
    <script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDzPfjG3MX3RdE1ePdO73UMQUImPsjgZMU&sensor=true&callback=initialize"> </script>
}
